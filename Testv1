local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("A") -- Creates the window

local b = w:CreateFolder("B") -- Creates the folder(U will put here your buttons,etc)

b:Button("Button",function()
    print("Elym Winning")
end)

b:Toggle("Toggle",function(bool)
    config.keybind = bool
    print(bool)
end)

local config = {
    adjustment = 3,
    defaultHitRange = 0.1,
    hitRangeToggle = 0.1,
    deflectCooldown = 0.1,
    mode = 'Toggle',
    deflectType = 'Remote',
    notifications = true,
    keybind = false,
    keybind2 = false,
    spamKeybind = false
}


    -- Services
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Balls = game:GetService("Workspace").Balls

-- State variables
local isTargeted = false
local canHit = false
local isKeybind2Active = false
local isSpamParryActive = false
local lastDeflectTime = 0

-- Find the real ball
local function findBall()
    local realBall

    for _, ball in pairs(Balls:GetChildren()) do
        if ball:GetAttribute("realBall") == true then
            realBall = ball
            break
        end
    end
    return realBall
end

-- Check if the ball is targeting the player
local function isTarget()
    local ball = findBall()
    return ball and ball:GetAttribute("target") == LocalPlayer.Name
end

-- Detect if the ball is within hit range
local function detectBall()
    local ball = findBall()

    if ball then
        local ballVelocity = ball.Velocity.Magnitude
        local ballPosition = ball.Position
        local playerPosition = LocalPlayer.Character.HumanoidRootPart.Position
        local distance = (ballPosition - playerPosition).Magnitude
        local pingAccountability = ballVelocity * (game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000)

        distance = pingAccountability
        distance = config.adjustment

        local hit = distance / ballVelocity

        return hit <= config.hitRangeToggle
    end

    return false
end

-- Deflect the ball
local function deflectBall()
    local currentTime = tick()

    -- Check if enough time has passed since the last deflect
    if currentTime - lastDeflectTime >= config.deflectCooldown then
        if isTargeted and detectBall() then
            if config.deflectType == 'Key Press' then
                keypress(0x46)
            else
                -- Fire both ParryButtonPress and BlockButtonPress
                ReplicatedStorage.Remotes.ParryButtonPress:Fire()
                ReplicatedStorage.Remotes.BlockButtonPress:Fire()
            end
            lastDeflectTime = currentTime
        end
    end
end

-- Update the hit range based on distance
local function updateHitRange()
    local ball = findBall()

    if ball then
        local ballVelocity = ball.Velocity.Magnitude
        local playerPosition = LocalPlayer.Character.HumanoidRootPart.Position
        local ballPosition = ball.Position
        local distance = (ballPosition - playerPosition).Magnitude

        config.hitRange = distance > 10 and config.defaultHitRange or config.hitRangeToggle
    end
end

-- Handle keybinds
UserInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end

    if config.mode == 'Toggle' and input.KeyCode == config.keybind then
        canHit = not canHit
        if config.notifications then
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Sinner's Royal | Alpha Build | 1.0.1 ",
                Text = canHit and 'On' or 'Off',
            })
        end
    elseif config.mode == 'Hold' and input.KeyCode == config.keybind and config.notifications then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Blade Ball",
            Text = 'Holding keybind!',
        })
    elseif input.KeyCode == config.keybind2 then
        isKeybind2Active = not isKeybind2Active
        config.hitRange = isKeybind2Active and config.hitRangeToggle or config.defaultHitRange
        if config.notifications then
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Faster Parry",
                Text = isKeybind2Active and 'On' or 'Off',
            })
        end
    elseif input.KeyCode == config.spamKeybind then
        isSpamParryActive = not isSpamParryActive
        if config.notifications then
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Spam V1",
                Text = isSpamParryActive and 'On' or 'Off',
            })
        end
    end
end)

-- Run the main logic
game:GetService('RunService').PostSimulation:Connect(function()
    isTargeted = isTarget()
    updateHitRange()

    if (config.mode == 'Hold' and UserInputService:IsKeyDown(config.keybind)) or isKeybind2Active or (config.mode == 'Toggle' and canHit) or (config.mode == 'Always') or isSpamParryActive then
        deflectBall()
    end
end)

getgenv().executed = true
